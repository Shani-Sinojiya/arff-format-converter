[project]
authors = [
  {name = "Shani Sinojiya", email = "shanisinojiya@gmail.com"},
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: Other/Proprietary License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Natural Language :: English",
]
dependencies = [
  "pandas>=2.1.0",
  "pyarrow>=15.0.0",
  "scipy>=1.11.0",
  "numpy>=1.24.0",
  "orjson>=3.9.0",
  "polars>=0.20.0",
  "fastparquet>=2023.10.0",
  "lxml>=4.9.0",
  "openpyxl>=3.1.0",
  "liac-arff>=2.5.0",
]
description = "Ultra-high-performance ARFF file converter with 100x speed improvements"
keywords = [
  "arff",
  "data-conversion",
  "format-conversion",
  "high-performance",
  "machine-learning",
  "data-preprocessing",
  "data-transformation",
  "file-format-conversion",
  "data-science",
  "python-package",
  "xml",
  "json",
  "csv",
  "excel",
  "orc",
  "parquet",
  "pandas",
  "pyarrow",
  "data-manipulation",
  "data-export",
  "data-import",
  "speed",
  "performance",
]
license = {text = "CC BY-ND 4.0"}
maintainers = [
  {name = "Shani Sinojiya", email = "shanisinojiya@gmail.com"},
]
name = "arff-format-converter"
readme = "README.md"
requires-python = ">=3.10"
version = "2.0.0"

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "pytest-benchmark>=4.0.0",
  "pytest-timeout>=2.1.0",
  "black>=23.9.0",
  "isort>=5.12.0",
  "flake8>=6.1.0",
  "mypy>=1.6.0",
]
test = [
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "pytest-benchmark>=4.0.0",
]

[project.urls]
Changelog = "https://github.com/Shani-Sinojiya/arff-format-converter/releases"
Documentation = "https://github.com/Shani-Sinojiya/arff-format-converter#readme"
Homepage = "https://github.com/Shani-Sinojiya/arff-format-converter"
Issues = "https://github.com/Shani-Sinojiya/arff-format-converter/issues"
Repository = "https://github.com/Shani-Sinojiya/arff-format-converter.git"

[project.scripts]
arff-converter = "arff_format_converter.cli:main"
arff-format-converter = "arff_format_converter.cli:main"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling>=1.20.0"]

[tool.hatch.version]
path = "arff_format_converter/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["arff_format_converter"]

[tool.hatch.build.targets.sdist]
include = [
  "/arff_format_converter",
  "/README.md",
  "/LICENSE",
  "/pyproject.toml",
]

# Performance Configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']

[tool.isort]
line_length = 88
multi_line_output = 3
profile = "black"

[tool.mypy]
python_version = "3.10"
strict = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = [
  "--strict-markers",
  "--strict-config",
  "--verbose",
]
python_files = ["test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]

[tool.coverage.run]
omit = ["*/tests/*", "*/test_*"]
source = ["arff_format_converter"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
